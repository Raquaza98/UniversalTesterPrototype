
import java.awt.Color;
import java.awt.Graphics;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.StringTokenizer;


/**
 *
 * @author Gasperini "Raquaza98" Luca
 */


public class ThreadedReporter extends javax.swing.JFrame implements Runnable{

    private String fileName;
    private boolean executed=false;
    /**
     * Creates new form ThreadedReporter
     */
    public ThreadedReporter() {
        initComponents();
    }
    
    public ThreadedReporter(String fileName) {
        this.fileName=fileName;
        
        
    }
    
    public ThreadedReporter(String fileName, int i) {
        this.fileName=fileName;   
        initComponents();
    }

    public void run(){
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ThreadedReporter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ThreadedReporter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ThreadedReporter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ThreadedReporter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ThreadedReporter(fileName,1).setVisible(true);
                
            }
        });
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        canvas1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                formMouseEntered(evt);
            }
        });
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });

        jScrollPane1.setAlignmentX(0.7F);
        jScrollPane1.setDoubleBuffered(true);
        jScrollPane1.setPreferredSize(new java.awt.Dimension(32767, 32767));

        canvas1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        javax.swing.GroupLayout canvas1Layout = new javax.swing.GroupLayout(canvas1);
        canvas1.setLayout(canvas1Layout);
        canvas1Layout.setHorizontalGroup(
            canvas1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 511, Short.MAX_VALUE)
        );
        canvas1Layout.setVerticalGroup(
            canvas1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 365, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(canvas1);

        jLabel1.setText("Numero Linee");

        jLabel2.setText("Memoria Free");

        jScrollPane3.setAlignmentX(0.3F);
        jScrollPane3.setMaximumSize(new java.awt.Dimension(200, 150));

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setMaximumSize(new java.awt.Dimension(160, 75));
        jScrollPane3.setViewportView(jTextArea1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 514, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 368, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseEntered
        if(!executed){
            GetReport();
        }
        executed=true;
    }//GEN-LAST:event_formMouseEntered

    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
        executed=false;
    }//GEN-LAST:event_formComponentResized

    
    private void GetReport(){
        jTextArea1.setText("");
        
        FileReader f = null;
        BufferedReader fIN = null;
        String s;
        StringTokenizer st;
        
        Long[] rect;
        rect = GetBounds();
        
    
        Graphics g = canvas1.getGraphics();
        
        g.setColor(Color.black);
        g.drawLine(1, canvas1.getBounds().height, 1, canvas1.getBounds().y);
        g.drawLine(1, canvas1.getBounds().height-1, canvas1.getBounds().width-1, canvas1.getBounds().height-1);
        
        g.drawString("Memoria usata scala 1:"+calculatePropInv(1,canvas1.getBounds().height, rect[1].intValue())+" B", 1, 10);
        g.drawString("Secondi test scala 1:"+calculateProp(1,canvas1.getBounds().width, rect[0].intValue())+" s", canvas1.getBounds().width-150, canvas1.getBounds().height-10);
        
        for(int j=1;j<canvas1.getBounds().height;j+=10){
            g.drawLine(1, canvas1.getBounds().height-j, 3, canvas1.getBounds().height-j);
            
        }
        
        for(int j=1;j<canvas1.getBounds().width;j+=10){
            g.drawLine(canvas1.getBounds().width-j, canvas1.getBounds().height-2, canvas1.getBounds().width-j, canvas1.getBounds().height-4);
            
        }
        
        //g.setColor(Color.red);
        //g.drawRect(canvas1.getBounds().x+1, canvas1.getBounds().y+1, rect[0].intValue() ,rect[1].intValue());
        
        g.setColor(Color.green);
        
        
    
        Long _yValue, _yMem=Long.parseLong("0");
        
        int _xValue=0,__xValue=1;
    try{
        f=new FileReader(fileName);
        fIN= new BufferedReader(f);
    }catch(IOException e){
        System.out.println("Errore nell'apertura del file");
    }
        
    boolean first =true;
    
    try{
        s=fIN.readLine();
        while(s != null){
            st=new StringTokenizer(s, "|");
            st.nextToken();
            _yValue =_yMem;
            _yMem = Long.parseLong(st.nextToken());
            Float f1 = Float.parseFloat(_yValue.toString()), f2 =Float.parseFloat(_yMem.toString());
            
            int _xValueProp = calculateProp(_xValue,canvas1.getBounds().width, rect[0].intValue());
            int __xValueProp = calculateProp(__xValue,canvas1.getBounds().width, rect[0].intValue());
            int _yValueProp = calculatePropInv(_yValue.intValue(),canvas1.getBounds().height, rect[1].intValue());
            int _yMemProp = calculatePropInv(_yMem.intValue(),canvas1.getBounds().height, rect[1].intValue());
            
            
            jTextArea1.append("valore x0 "+_xValue+" valore x1 "+ __xValue +" valore y0 "+ f1.toString()+" valore y1 " +f2.toString()+"\r\n");
            jTextArea1.append("valore prop x0 "+_xValueProp+" valore prop x1 "+__xValueProp+" valore prop y0 "+_yValueProp+" valore prop y1 "+_yMemProp+""+"\r\n");
            
            if(first){
                _yValueProp= canvas1.getBounds().height-1;
                first=false;
            }
            g.drawLine(_xValueProp,_yValueProp , __xValueProp, _yMemProp);
            
            
            
            _xValue++;
            __xValue++;
            s=fIN.readLine();
        }
    }
    catch(IOException e){
         System.out.println("Errore nella lettura del file");
        System.exit(1);
    }
    try {
        f.close();
    }catch (IOException e){
         System.out.println("Errore nella chiusura del file");
        System.exit(1);
    }
    
    System.out.println(rect[0].intValue()+","+ rect[1].intValue());
    System.out.println(""+canvas1.getBounds().width+" "+canvas1.getBounds().height);
    System.out.println(""+jScrollPane1.getBounds().toString());
    
    
    
    
    
    } 
    
    
    
    
    private Long[] GetBounds(){
        FileReader f = null;
        BufferedReader fIN = null;
        String s;
        StringTokenizer st;
        Integer nLines=0, nowValue, maxValue=0;
        
    try{
        f=new FileReader(fileName);
        fIN= new BufferedReader(f);
    }catch(IOException e){
        System.out.println("Errore nell'apertura del file");
        System.exit(1);
    }
        
    
    
    
    try{
        s=fIN.readLine();
        while(s != null){
            st=new StringTokenizer(s, "|");
            nowValue= Integer.parseInt(st.nextToken());
            
            if(maxValue< nowValue){
                maxValue = nowValue;
            }
            
            nLines++;
            
            s=fIN.readLine();
        }
    }
    catch(IOException e){
         System.out.println("Errore nella lettura del file");
        System.exit(1);
    }
    try {
        f.close();
    }catch (IOException e){
         System.out.println("Errore nella chiusura del file");
        System.exit(1);
    }
    Long[] r =new Long[2];
    r[0]= Long.parseLong(nLines.toString());
    r[1]= Long.parseLong(maxValue.toString())*100;
    jLabel3.setText(nLines+"");
    jLabel4.setText(maxValue+"");
    return r;
    }   
    
    private int calculateProp(int Value, int Width, int MaxVal){
        return (Value*Width)/MaxVal;
    }
    private int calculatePropInv(int Value, int Width, int MaxVal){
        return Width - (Value*Width)/MaxVal;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel canvas1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
